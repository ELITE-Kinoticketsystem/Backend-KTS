-- MySQL Script generated by MySQL Workbench
-- Mon Nov 13 23:16:31 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ticketsystem
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ticketsystem` ;

-- -----------------------------------------------------
-- Schema ticketsystem
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ticketsystem`; -- DEFAULT CHARACTER SET utf8 ;
USE `ticketsystem` ;

-- -----------------------------------------------------
-- Table `ticketsystem`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`address` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`address` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `street` VARCHAR(45) NULL,
  `streetnr` VARCHAR(45) NULL,
  `zipcode` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `country` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketsystem`.`theatres`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`theatres` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`theatres` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `address_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_theatre_address_idx` (`address_id` ASC) VISIBLE,
  CONSTRAINT `fk_theatre_address`
    FOREIGN KEY (`address_id`)
    REFERENCES `ticketsystem`.`address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketsystem`.`cinema_halls`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`cinema_halls` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`cinema_halls` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `capacity` INT NOT NULL,
  `theatres_id` INT NOT NULL,
  PRIMARY KEY (`id`, `theatres_id`),
  INDEX `fk_cinema_halls_theatres1_idx` (`theatres_id` ASC) VISIBLE,
  CONSTRAINT `fk_cinema_halls_theatres1`
    FOREIGN KEY (`theatres_id`)
    REFERENCES `ticketsystem`.`theatres` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketsystem`.`seats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`seats` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`seats` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `row_nr` VARCHAR(45) NOT NULL,
  `seat_nr` VARCHAR(45) NOT NULL,
  `category` VARCHAR(45) not null,
  `cinema_halls_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cinema_halls_id`),
  INDEX `fk_seats_cinema_halls1_idx` (`cinema_halls_id` ASC) VISIBLE,
  CONSTRAINT `fk_seats_cinema_halls1`
    FOREIGN KEY (`cinema_halls_id`)
    REFERENCES `ticketsystem`.`cinema_halls` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketsystem`.`tickets`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`tickets` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`tickets` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `price` DOUBLE NOT NULL,
  `date_stamp` DATETIME NOT NULL,
  `validated` BOOL NULL,
  `paid` BOOL NULL,
  `reserved` BOOL NULL,
  `seat_row_nr` VARCHAR(45) NULL,
  `seat_seat_nr` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `ticketsystem`.`movies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`movies` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`movies` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  `releaseDate` DATETIME NULL,
  `timeInMinutes` INT NULL,
  `fsk` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `ticketsystem`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`user` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`user` (
  `id` int NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(16) NOT NULL,
  `firstname` VARCHAR(45) NULL,
  `lastname` VARCHAR(45) NULL,
  `email` VARCHAR(255) NULL,
  `password` VARCHAR(32) NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `address_id` INT NOT NULL,
  `is_admin` BOOL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  INDEX `fk_user_address1_idx` (`address_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `ticketsystem`.`address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ticketsystem`.`user_watchlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`user_watchlist` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`user_watchlist` (
  `movies_id` INT NOT NULL,
  `user_id` int NOT NULL,
  PRIMARY KEY (`movies_id`, `user_id`),
  INDEX `fk_user_watchlist_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_user_watchlist_movies1_idx` (`movies_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_watchlist_movies1`
    FOREIGN KEY (`movies_id`)
    REFERENCES `ticketsystem`.`movies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_watchlist_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `ticketsystem`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketsystem`.`user_cinemas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`user_cinemas` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`user_cinemas` (
  `user_id` int NOT NULL,
  `cinema_halls_id` INT NOT NULL,
  `cinema_halls_theatres_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `cinema_halls_id`, `cinema_halls_theatres_id`),
  INDEX `fk_user_cinemas_cinema_halls1_idx` (`cinema_halls_id` ASC, `cinema_halls_theatres_id` ASC) VISIBLE,
  INDEX `fk_user_cinemas_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_cinemas_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `ticketsystem`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_cinemas_cinema_halls1`
    FOREIGN KEY (`cinema_halls_id` , `cinema_halls_theatres_id`)
    REFERENCES `ticketsystem`.`cinema_halls` (`id` , `theatres_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ticketsystem`.`events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`events` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`events` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NOT NULL,
  `cinema_halls_id` INT NOT NULL,
  `cinema_halls_theatres_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cinema_halls_id`, `cinema_halls_theatres_id`),
  INDEX `fk_events_cinema_halls1_idx` (`cinema_halls_id` ASC, `cinema_halls_theatres_id` ASC) VISIBLE,
  CONSTRAINT `fk_events_cinema_halls1`
    FOREIGN KEY (`cinema_halls_id` , `cinema_halls_theatres_id`)
    REFERENCES `ticketsystem`.`cinema_halls` (`id` , `theatres_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketsystem`.`presentationSchedules`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`presentationSchedules` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`presentationSchedules` (
  `movies_id` INT NOT NULL,
  `events_id` INT NOT NULL,
  `datetime` DATETIME NOT NULL,
  PRIMARY KEY (`movies_id`, `events_id`),
  INDEX `fk_movies_has_events_events1_idx` (`events_id` ASC) VISIBLE,
  INDEX `fk_movies_has_events_movies1_idx` (`movies_id` ASC) VISIBLE,
  CONSTRAINT `fk_movies_has_events_movies1`
    FOREIGN KEY (`movies_id`)
    REFERENCES `ticketsystem`.`movies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movies_has_events_events1`
    FOREIGN KEY (`events_id`)
    REFERENCES `ticketsystem`.`events` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketsystem`.`Order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsystem`.`Order` ;

CREATE TABLE IF NOT EXISTS `ticketsystem`.`Order` (
  `tickets_id` INT NOT NULL,
  `user_id` int NOT NULL,
  `Confirmed` TINYINT NULL,
  `presentationSchedules_movies_id` INT NOT NULL,
  `presentationSchedules_events_id` INT NOT NULL,
  PRIMARY KEY (`tickets_id`, `user_id`, `presentationSchedules_movies_id`, `presentationSchedules_events_id`),
  INDEX `fk_events_has_tickets_tickets1_idx` (`tickets_id` ASC) VISIBLE,
  INDEX `fk_Bookings_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_Order_presentationSchedules1_idx` (`presentationSchedules_movies_id` ASC, `presentationSchedules_events_id` ASC) VISIBLE,
  CONSTRAINT `fk_events_has_tickets_tickets1`
    FOREIGN KEY (`tickets_id`)
    REFERENCES `ticketsystem`.`tickets` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Bookings_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `ticketsystem`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_presentationSchedules1`
    FOREIGN KEY (`presentationSchedules_movies_id` , `presentationSchedules_events_id`)
    REFERENCES `ticketsystem`.`presentationSchedules` (`movies_id` , `events_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- SET SQL_MODE=@OLD_SQL_MODE;
-- SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
-- SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
 