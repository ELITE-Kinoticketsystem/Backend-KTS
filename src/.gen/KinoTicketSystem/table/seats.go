//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Seats = newSeatsTable("KinoTicketSystem", "seats", "")

type seatsTable struct {
	mysql.Table

	// Columns
	ID             mysql.ColumnString
	RowNr          mysql.ColumnInteger
	ColumnNr       mysql.ColumnInteger
	SeatCategoryID mysql.ColumnString
	CinemaHallID   mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type SeatsTable struct {
	seatsTable

	NEW seatsTable
}

// AS creates new SeatsTable with assigned alias
func (a SeatsTable) AS(alias string) *SeatsTable {
	return newSeatsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SeatsTable with assigned schema name
func (a SeatsTable) FromSchema(schemaName string) *SeatsTable {
	return newSeatsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SeatsTable with assigned table prefix
func (a SeatsTable) WithPrefix(prefix string) *SeatsTable {
	return newSeatsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SeatsTable with assigned table suffix
func (a SeatsTable) WithSuffix(suffix string) *SeatsTable {
	return newSeatsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSeatsTable(schemaName, tableName, alias string) *SeatsTable {
	return &SeatsTable{
		seatsTable: newSeatsTableImpl(schemaName, tableName, alias),
		NEW:        newSeatsTableImpl("", "new", ""),
	}
}

func newSeatsTableImpl(schemaName, tableName, alias string) seatsTable {
	var (
		IDColumn             = mysql.StringColumn("id")
		RowNrColumn          = mysql.IntegerColumn("row_nr")
		ColumnNrColumn       = mysql.IntegerColumn("column_nr")
		SeatCategoryIDColumn = mysql.StringColumn("seat_category_id")
		CinemaHallIDColumn   = mysql.StringColumn("cinema_hall_id")
		allColumns           = mysql.ColumnList{IDColumn, RowNrColumn, ColumnNrColumn, SeatCategoryIDColumn, CinemaHallIDColumn}
		mutableColumns       = mysql.ColumnList{RowNrColumn, ColumnNrColumn, SeatCategoryIDColumn, CinemaHallIDColumn}
	)

	return seatsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:             IDColumn,
		RowNr:          RowNrColumn,
		ColumnNr:       ColumnNrColumn,
		SeatCategoryID: SeatCategoryIDColumn,
		CinemaHallID:   CinemaHallIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
