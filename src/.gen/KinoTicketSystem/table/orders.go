//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Orders = newOrdersTable("KinoTicketSystem", "orders", "")

type ordersTable struct {
	mysql.Table

	// Columns
	ID              mysql.ColumnString
	Totalprice      mysql.ColumnInteger
	IsPaid          mysql.ColumnBool
	PaymentMethodID mysql.ColumnString
	UserID          mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type OrdersTable struct {
	ordersTable

	NEW ordersTable
}

// AS creates new OrdersTable with assigned alias
func (a OrdersTable) AS(alias string) *OrdersTable {
	return newOrdersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new OrdersTable with assigned schema name
func (a OrdersTable) FromSchema(schemaName string) *OrdersTable {
	return newOrdersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new OrdersTable with assigned table prefix
func (a OrdersTable) WithPrefix(prefix string) *OrdersTable {
	return newOrdersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new OrdersTable with assigned table suffix
func (a OrdersTable) WithSuffix(suffix string) *OrdersTable {
	return newOrdersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newOrdersTable(schemaName, tableName, alias string) *OrdersTable {
	return &OrdersTable{
		ordersTable: newOrdersTableImpl(schemaName, tableName, alias),
		NEW:         newOrdersTableImpl("", "new", ""),
	}
}

func newOrdersTableImpl(schemaName, tableName, alias string) ordersTable {
	var (
		IDColumn              = mysql.StringColumn("id")
		TotalpriceColumn      = mysql.IntegerColumn("totalprice")
		IsPaidColumn          = mysql.BoolColumn("is_paid")
		PaymentMethodIDColumn = mysql.StringColumn("payment_method_id")
		UserIDColumn          = mysql.StringColumn("user_id")
		allColumns            = mysql.ColumnList{IDColumn, TotalpriceColumn, IsPaidColumn, PaymentMethodIDColumn, UserIDColumn}
		mutableColumns        = mysql.ColumnList{TotalpriceColumn, IsPaidColumn, PaymentMethodIDColumn, UserIDColumn}
	)

	return ordersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		Totalprice:      TotalpriceColumn,
		IsPaid:          IsPaidColumn,
		PaymentMethodID: PaymentMethodIDColumn,
		UserID:          UserIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
