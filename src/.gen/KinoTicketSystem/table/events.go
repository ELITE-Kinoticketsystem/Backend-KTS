//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Events = newEventsTable("KinoTicketSystem", "events", "")

type eventsTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnString
	Title        mysql.ColumnString
	Start        mysql.ColumnDate
	End          mysql.ColumnDate
	EventTypeID  mysql.ColumnString
	CinemaHallID mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type EventsTable struct {
	eventsTable

	NEW eventsTable
}

// AS creates new EventsTable with assigned alias
func (a EventsTable) AS(alias string) *EventsTable {
	return newEventsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EventsTable with assigned schema name
func (a EventsTable) FromSchema(schemaName string) *EventsTable {
	return newEventsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EventsTable with assigned table prefix
func (a EventsTable) WithPrefix(prefix string) *EventsTable {
	return newEventsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EventsTable with assigned table suffix
func (a EventsTable) WithSuffix(suffix string) *EventsTable {
	return newEventsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEventsTable(schemaName, tableName, alias string) *EventsTable {
	return &EventsTable{
		eventsTable: newEventsTableImpl(schemaName, tableName, alias),
		NEW:         newEventsTableImpl("", "new", ""),
	}
}

func newEventsTableImpl(schemaName, tableName, alias string) eventsTable {
	var (
		IDColumn           = mysql.StringColumn("id")
		TitleColumn        = mysql.StringColumn("title")
		StartColumn        = mysql.DateColumn("start")
		EndColumn          = mysql.DateColumn("end")
		EventTypeIDColumn  = mysql.StringColumn("event_type_id")
		CinemaHallIDColumn = mysql.StringColumn("cinema_hall_id")
		allColumns         = mysql.ColumnList{IDColumn, TitleColumn, StartColumn, EndColumn, EventTypeIDColumn, CinemaHallIDColumn}
		mutableColumns     = mysql.ColumnList{TitleColumn, StartColumn, EndColumn, EventTypeIDColumn, CinemaHallIDColumn}
	)

	return eventsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		Title:        TitleColumn,
		Start:        StartColumn,
		End:          EndColumn,
		EventTypeID:  EventTypeIDColumn,
		CinemaHallID: CinemaHallIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
