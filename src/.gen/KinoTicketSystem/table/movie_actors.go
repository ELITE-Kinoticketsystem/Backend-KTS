//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MovieActors = newMovieActorsTable("KinoTicketSystem", "movie_actors", "")

type movieActorsTable struct {
	mysql.Table

	// Columns
	MovieID mysql.ColumnString
	ActorID mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MovieActorsTable struct {
	movieActorsTable

	NEW movieActorsTable
}

// AS creates new MovieActorsTable with assigned alias
func (a MovieActorsTable) AS(alias string) *MovieActorsTable {
	return newMovieActorsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MovieActorsTable with assigned schema name
func (a MovieActorsTable) FromSchema(schemaName string) *MovieActorsTable {
	return newMovieActorsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MovieActorsTable with assigned table prefix
func (a MovieActorsTable) WithPrefix(prefix string) *MovieActorsTable {
	return newMovieActorsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MovieActorsTable with assigned table suffix
func (a MovieActorsTable) WithSuffix(suffix string) *MovieActorsTable {
	return newMovieActorsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMovieActorsTable(schemaName, tableName, alias string) *MovieActorsTable {
	return &MovieActorsTable{
		movieActorsTable: newMovieActorsTableImpl(schemaName, tableName, alias),
		NEW:              newMovieActorsTableImpl("", "new", ""),
	}
}

func newMovieActorsTableImpl(schemaName, tableName, alias string) movieActorsTable {
	var (
		MovieIDColumn  = mysql.StringColumn("movie_id")
		ActorIDColumn  = mysql.StringColumn("actor_id")
		allColumns     = mysql.ColumnList{MovieIDColumn, ActorIDColumn}
		mutableColumns = mysql.ColumnList{}
	)

	return movieActorsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		MovieID: MovieIDColumn,
		ActorID: ActorIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
