//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MovieGenres = newMovieGenresTable("KinoTicketSystem", "movie_genres", "")

type movieGenresTable struct {
	mysql.Table

	// Columns
	MovieID mysql.ColumnString
	GenreID mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MovieGenresTable struct {
	movieGenresTable

	NEW movieGenresTable
}

// AS creates new MovieGenresTable with assigned alias
func (a MovieGenresTable) AS(alias string) *MovieGenresTable {
	return newMovieGenresTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MovieGenresTable with assigned schema name
func (a MovieGenresTable) FromSchema(schemaName string) *MovieGenresTable {
	return newMovieGenresTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MovieGenresTable with assigned table prefix
func (a MovieGenresTable) WithPrefix(prefix string) *MovieGenresTable {
	return newMovieGenresTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MovieGenresTable with assigned table suffix
func (a MovieGenresTable) WithSuffix(suffix string) *MovieGenresTable {
	return newMovieGenresTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMovieGenresTable(schemaName, tableName, alias string) *MovieGenresTable {
	return &MovieGenresTable{
		movieGenresTable: newMovieGenresTableImpl(schemaName, tableName, alias),
		NEW:              newMovieGenresTableImpl("", "new", ""),
	}
}

func newMovieGenresTableImpl(schemaName, tableName, alias string) movieGenresTable {
	var (
		MovieIDColumn  = mysql.StringColumn("movie_id")
		GenreIDColumn  = mysql.StringColumn("genre_id")
		allColumns     = mysql.ColumnList{MovieIDColumn, GenreIDColumn}
		mutableColumns = mysql.ColumnList{}
	)

	return movieGenresTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		MovieID: MovieIDColumn,
		GenreID: GenreIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
